
package cn.ls.integrator.client.service;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.6 in JDK 6
 * Generated source version: 2.1
 * 
 */
@WebService(name = "ScheduleService", targetNamespace = "http://service.server.integrator.ls.cn/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ScheduleService {


    /**
     * 
     * @param scheduleTitle
     * @param scheduleName
     * @param scheduleDescription
     * @param taskContexts
     * @param tasks
     */
    @WebMethod
    @RequestWrapper(localName = "addRecvSchedule", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.AddRecvSchedule")
    @ResponseWrapper(localName = "addRecvScheduleResponse", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.AddRecvScheduleResponse")
    public void addRecvSchedule(
        @WebParam(name = "scheduleName", targetNamespace = "")
        String scheduleName,
        @WebParam(name = "scheduleTitle", targetNamespace = "")
        String scheduleTitle,
        @WebParam(name = "scheduleDescription", targetNamespace = "")
        String scheduleDescription,
        @WebParam(name = "tasks", targetNamespace = "")
        List<Task> tasks,
        @WebParam(name = "taskContexts", targetNamespace = "")
        List<String> taskContexts);

    /**
     * 
     * @param timers
     * @param scheduleTitle
     * @param scheduleName
     * @param associates
     * @param scheduleDescription
     * @param taskContexts
     * @param tasks
     */
    @WebMethod
    @RequestWrapper(localName = "addSendSchedule", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.AddSendSchedule")
    @ResponseWrapper(localName = "addSendScheduleResponse", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.AddSendScheduleResponse")
    public void addSendSchedule(
        @WebParam(name = "scheduleName", targetNamespace = "")
        String scheduleName,
        @WebParam(name = "scheduleTitle", targetNamespace = "")
        String scheduleTitle,
        @WebParam(name = "scheduleDescription", targetNamespace = "")
        String scheduleDescription,
        @WebParam(name = "tasks", targetNamespace = "")
        List<Task> tasks,
        @WebParam(name = "timers", targetNamespace = "")
        List<Timer> timers,
        @WebParam(name = "taskContexts", targetNamespace = "")
        List<String> taskContexts,
        @WebParam(name = "associates", targetNamespace = "")
        List<Associate> associates);

    /**
     * 
     * @param scheduleName
     * @return
     *     returns cn.ls.integrator.client.service.Schedule
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getSendSchedule", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.GetSendSchedule")
    @ResponseWrapper(localName = "getSendScheduleResponse", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.GetSendScheduleResponse")
    public Schedule getSendSchedule(
        @WebParam(name = "scheduleName", targetNamespace = "")
        String scheduleName);

    /**
     * 
     * @param scheduleName
     * @return
     *     returns java.util.List<cn.ls.integrator.client.service.Associate>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAssociates", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.GetAssociates")
    @ResponseWrapper(localName = "getAssociatesResponse", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.GetAssociatesResponse")
    public List<Associate> getAssociates(
        @WebParam(name = "scheduleName", targetNamespace = "")
        String scheduleName);

    /**
     * 
     * @param scheduleName
     * @param task
     * @param taskContext
     */
    @WebMethod
    @RequestWrapper(localName = "addRecvTask", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.AddRecvTask")
    @ResponseWrapper(localName = "addRecvTaskResponse", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.AddRecvTaskResponse")
    public void addRecvTask(
        @WebParam(name = "scheduleName", targetNamespace = "")
        String scheduleName,
        @WebParam(name = "task", targetNamespace = "")
        Task task,
        @WebParam(name = "taskContext", targetNamespace = "")
        String taskContext);

    /**
     * 
     * @param scheduleName
     * @return
     *     returns cn.ls.integrator.client.service.Schedule
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getRecvSchedule", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.GetRecvSchedule")
    @ResponseWrapper(localName = "getRecvScheduleResponse", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.GetRecvScheduleResponse")
    public Schedule getRecvSchedule(
        @WebParam(name = "scheduleName", targetNamespace = "")
        String scheduleName);

    /**
     * 
     * @param timerName
     * @param scheduleName
     * @param task
     * @param taskContext
     */
    @WebMethod
    @RequestWrapper(localName = "addTaskOnTimer", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.AddTaskOnTimer")
    @ResponseWrapper(localName = "addTaskOnTimerResponse", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.AddTaskOnTimerResponse")
    public void addTaskOnTimer(
        @WebParam(name = "scheduleName", targetNamespace = "")
        String scheduleName,
        @WebParam(name = "task", targetNamespace = "")
        Task task,
        @WebParam(name = "timerName", targetNamespace = "")
        String timerName,
        @WebParam(name = "taskContext", targetNamespace = "")
        String taskContext);

    /**
     * 
     * @param scheduleName
     * @param timer
     * @param taskName
     */
    @WebMethod
    @RequestWrapper(localName = "addTimerOnTask", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.AddTimerOnTask")
    @ResponseWrapper(localName = "addTimerOnTaskResponse", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.AddTimerOnTaskResponse")
    public void addTimerOnTask(
        @WebParam(name = "scheduleName", targetNamespace = "")
        String scheduleName,
        @WebParam(name = "timer", targetNamespace = "")
        Timer timer,
        @WebParam(name = "taskName", targetNamespace = "")
        String taskName);

    /**
     * 
     * @param scheduleName
     */
    @WebMethod
    @RequestWrapper(localName = "deleteRecvSchedule", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.DeleteRecvSchedule")
    @ResponseWrapper(localName = "deleteRecvScheduleResponse", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.DeleteRecvScheduleResponse")
    public void deleteRecvSchedule(
        @WebParam(name = "scheduleName", targetNamespace = "")
        String scheduleName);

    /**
     * 
     * @param scheduleName
     * @param taskName
     */
    @WebMethod
    @RequestWrapper(localName = "deleteRecvTask", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.DeleteRecvTask")
    @ResponseWrapper(localName = "deleteRecvTaskResponse", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.DeleteRecvTaskResponse")
    public void deleteRecvTask(
        @WebParam(name = "scheduleName", targetNamespace = "")
        String scheduleName,
        @WebParam(name = "taskName", targetNamespace = "")
        String taskName);

    /**
     * 
     * @param scheduleName
     */
    @WebMethod
    @RequestWrapper(localName = "deleteSendSchedule", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.DeleteSendSchedule")
    @ResponseWrapper(localName = "deleteSendScheduleResponse", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.DeleteSendScheduleResponse")
    public void deleteSendSchedule(
        @WebParam(name = "scheduleName", targetNamespace = "")
        String scheduleName);

    /**
     * 
     * @param timerName
     * @param scheduleName
     * @param taskName
     */
    @WebMethod
    @RequestWrapper(localName = "deleteTaskOnTimer", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.DeleteTaskOnTimer")
    @ResponseWrapper(localName = "deleteTaskOnTimerResponse", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.DeleteTaskOnTimerResponse")
    public void deleteTaskOnTimer(
        @WebParam(name = "scheduleName", targetNamespace = "")
        String scheduleName,
        @WebParam(name = "timerName", targetNamespace = "")
        String timerName,
        @WebParam(name = "taskName", targetNamespace = "")
        String taskName);

    /**
     * 
     * @param timerName
     * @param scheduleName
     * @param taskName
     */
    @WebMethod
    @RequestWrapper(localName = "deleteTimerOnTask", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.DeleteTimerOnTask")
    @ResponseWrapper(localName = "deleteTimerOnTaskResponse", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.DeleteTimerOnTaskResponse")
    public void deleteTimerOnTask(
        @WebParam(name = "scheduleName", targetNamespace = "")
        String scheduleName,
        @WebParam(name = "taskName", targetNamespace = "")
        String taskName,
        @WebParam(name = "timerName", targetNamespace = "")
        String timerName);

    /**
     * 
     * @param scheduleName
     * @param taskName
     */
    @WebMethod
    @RequestWrapper(localName = "deleteTimestamp", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.DeleteTimestamp")
    @ResponseWrapper(localName = "deleteTimestampResponse", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.DeleteTimestampResponse")
    public void deleteTimestamp(
        @WebParam(name = "scheduleName", targetNamespace = "")
        String scheduleName,
        @WebParam(name = "taskName", targetNamespace = "")
        String taskName);

    /**
     * 
     * @param scheduleName
     * @param taskName
     */
    @WebMethod
    @RequestWrapper(localName = "initializeFileTask", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.InitializeFileTask")
    @ResponseWrapper(localName = "initializeFileTaskResponse", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.InitializeFileTaskResponse")
    public void initializeFileTask(
        @WebParam(name = "scheduleName", targetNamespace = "")
        String scheduleName,
        @WebParam(name = "taskName", targetNamespace = "")
        String taskName);

    /**
     * 
     * @param scheduleName
     * @param task
     * @param taskContext
     */
    @WebMethod
    @RequestWrapper(localName = "deployRecvTask", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.DeployRecvTask")
    @ResponseWrapper(localName = "deployRecvTaskResponse", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.DeployRecvTaskResponse")
    public void deployRecvTask(
        @WebParam(name = "scheduleName", targetNamespace = "")
        String scheduleName,
        @WebParam(name = "task", targetNamespace = "")
        Task task,
        @WebParam(name = "taskContext", targetNamespace = "")
        String taskContext);

    /**
     * 
     * @param recvNodeName
     * @param scheduleName
     * @param sendNodeName
     * @param taskName
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "existRecvErrorLog", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.ExistRecvErrorLog")
    @ResponseWrapper(localName = "existRecvErrorLogResponse", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.ExistRecvErrorLogResponse")
    public boolean existRecvErrorLog(
        @WebParam(name = "scheduleName", targetNamespace = "")
        String scheduleName,
        @WebParam(name = "taskName", targetNamespace = "")
        String taskName,
        @WebParam(name = "sendNodeName", targetNamespace = "")
        String sendNodeName,
        @WebParam(name = "recvNodeName", targetNamespace = "")
        String recvNodeName);

    /**
     * 
     * @param recvNodeName
     * @param scheduleName
     * @param sendNodeName
     * @param taskName
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "existSendErrorLog", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.ExistSendErrorLog")
    @ResponseWrapper(localName = "existSendErrorLogResponse", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.ExistSendErrorLogResponse")
    public boolean existSendErrorLog(
        @WebParam(name = "scheduleName", targetNamespace = "")
        String scheduleName,
        @WebParam(name = "taskName", targetNamespace = "")
        String taskName,
        @WebParam(name = "sendNodeName", targetNamespace = "")
        String sendNodeName,
        @WebParam(name = "recvNodeName", targetNamespace = "")
        String recvNodeName);

    /**
     * 
     * @param limit
     * @param parameters
     * @param offset
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getLogList", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.GetLogList")
    @ResponseWrapper(localName = "getLogListResponse", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.GetLogListResponse")
    public String getLogList(
        @WebParam(name = "parameters", targetNamespace = "")
        String parameters,
        @WebParam(name = "offset", targetNamespace = "")
        int offset,
        @WebParam(name = "limit", targetNamespace = "")
        int limit);

    /**
     * 
     * @param limit
     * @param parameters
     * @param offset
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getFileExchangeLogList", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.GetFileExchangeLogList")
    @ResponseWrapper(localName = "getFileExchangeLogListResponse", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.GetFileExchangeLogListResponse")
    public String getFileExchangeLogList(
        @WebParam(name = "parameters", targetNamespace = "")
        String parameters,
        @WebParam(name = "offset", targetNamespace = "")
        int offset,
        @WebParam(name = "limit", targetNamespace = "")
        int limit);

    /**
     * 
     * @param limit
     * @param parameters
     * @param offset
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getErrorLogList", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.GetErrorLogList")
    @ResponseWrapper(localName = "getErrorLogListResponse", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.GetErrorLogListResponse")
    public String getErrorLogList(
        @WebParam(name = "parameters", targetNamespace = "")
        String parameters,
        @WebParam(name = "offset", targetNamespace = "")
        int offset,
        @WebParam(name = "limit", targetNamespace = "")
        int limit);

    /**
     * 
     * @param recvNodeName
     * @param scheduleName
     * @param sendNodeName
     * @param taskName
     */
    @WebMethod
    @RequestWrapper(localName = "deleteSendErrorLog", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.DeleteSendErrorLog")
    @ResponseWrapper(localName = "deleteSendErrorLogResponse", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.DeleteSendErrorLogResponse")
    public void deleteSendErrorLog(
        @WebParam(name = "scheduleName", targetNamespace = "")
        String scheduleName,
        @WebParam(name = "taskName", targetNamespace = "")
        String taskName,
        @WebParam(name = "sendNodeName", targetNamespace = "")
        String sendNodeName,
        @WebParam(name = "recvNodeName", targetNamespace = "")
        String recvNodeName);

    /**
     * 
     * @param recvNodeName
     * @param scheduleName
     * @param sendNodeName
     * @param taskName
     */
    @WebMethod
    @RequestWrapper(localName = "deleteRecvErrorLog", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.DeleteRecvErrorLog")
    @ResponseWrapper(localName = "deleteRecvErrorLogResponse", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.DeleteRecvErrorLogResponse")
    public void deleteRecvErrorLog(
        @WebParam(name = "scheduleName", targetNamespace = "")
        String scheduleName,
        @WebParam(name = "taskName", targetNamespace = "")
        String taskName,
        @WebParam(name = "sendNodeName", targetNamespace = "")
        String sendNodeName,
        @WebParam(name = "recvNodeName", targetNamespace = "")
        String recvNodeName);

    /**
     * 
     * @return
     *     returns java.util.List<cn.ls.integrator.client.service.Schedule>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getRecvScheduleList", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.GetRecvScheduleList")
    @ResponseWrapper(localName = "getRecvScheduleListResponse", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.GetRecvScheduleListResponse")
    public List<Schedule> getRecvScheduleList();

    /**
     * 
     * @param scheduleName
     * @param taskName
     * @return
     *     returns cn.ls.integrator.client.service.Task
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getRecvTask", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.GetRecvTask")
    @ResponseWrapper(localName = "getRecvTaskResponse", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.GetRecvTaskResponse")
    public Task getRecvTask(
        @WebParam(name = "scheduleName", targetNamespace = "")
        String scheduleName,
        @WebParam(name = "taskName", targetNamespace = "")
        String taskName);

    /**
     * 
     * @param scheduleName
     * @param taskName
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getRecvTaskContext", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.GetRecvTaskContext")
    @ResponseWrapper(localName = "getRecvTaskContextResponse", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.GetRecvTaskContextResponse")
    public String getRecvTaskContext(
        @WebParam(name = "scheduleName", targetNamespace = "")
        String scheduleName,
        @WebParam(name = "taskName", targetNamespace = "")
        String taskName);

    /**
     * 
     * @param scheduleName
     * @return
     *     returns java.util.List<cn.ls.integrator.client.service.Task>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getRecvTaskList", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.GetRecvTaskList")
    @ResponseWrapper(localName = "getRecvTaskListResponse", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.GetRecvTaskListResponse")
    public List<Task> getRecvTaskList(
        @WebParam(name = "scheduleName", targetNamespace = "")
        String scheduleName);

    /**
     * 
     * @return
     *     returns java.util.List<cn.ls.integrator.client.service.Schedule>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getSendScheduleList", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.GetSendScheduleList")
    @ResponseWrapper(localName = "getSendScheduleListResponse", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.GetSendScheduleListResponse")
    public List<Schedule> getSendScheduleList();

    /**
     * 
     * @param scheduleName
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getSendScheduleState", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.GetSendScheduleState")
    @ResponseWrapper(localName = "getSendScheduleStateResponse", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.GetSendScheduleStateResponse")
    public boolean getSendScheduleState(
        @WebParam(name = "scheduleName", targetNamespace = "")
        String scheduleName);

    /**
     * 
     * @param scheduleName
     * @param taskName
     * @return
     *     returns cn.ls.integrator.client.service.Task
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getSendTask", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.GetSendTask")
    @ResponseWrapper(localName = "getSendTaskResponse", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.GetSendTaskResponse")
    public Task getSendTask(
        @WebParam(name = "scheduleName", targetNamespace = "")
        String scheduleName,
        @WebParam(name = "taskName", targetNamespace = "")
        String taskName);

    /**
     * 
     * @param scheduleName
     * @param taskName
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getSendTaskContext", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.GetSendTaskContext")
    @ResponseWrapper(localName = "getSendTaskContextResponse", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.GetSendTaskContextResponse")
    public String getSendTaskContext(
        @WebParam(name = "scheduleName", targetNamespace = "")
        String scheduleName,
        @WebParam(name = "taskName", targetNamespace = "")
        String taskName);

    /**
     * 
     * @param scheduleName
     * @return
     *     returns java.util.List<cn.ls.integrator.client.service.Task>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getSendTaskList", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.GetSendTaskList")
    @ResponseWrapper(localName = "getSendTaskListResponse", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.GetSendTaskListResponse")
    public List<Task> getSendTaskList(
        @WebParam(name = "scheduleName", targetNamespace = "")
        String scheduleName);

    /**
     * 
     * @param scheduleName
     * @param task
     * @param taskContext
     * @param oldName
     */
    @WebMethod
    @RequestWrapper(localName = "updateRecvTask", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.UpdateRecvTask")
    @ResponseWrapper(localName = "updateRecvTaskResponse", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.UpdateRecvTaskResponse")
    public void updateRecvTask(
        @WebParam(name = "scheduleName", targetNamespace = "")
        String scheduleName,
        @WebParam(name = "oldName", targetNamespace = "")
        String oldName,
        @WebParam(name = "task", targetNamespace = "")
        Task task,
        @WebParam(name = "taskContext", targetNamespace = "")
        String taskContext);

    /**
     * 
     * @param scheduleName
     * @param task
     * @param taskContext
     * @param oldName
     */
    @WebMethod
    @RequestWrapper(localName = "updateSendTask", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.UpdateSendTask")
    @ResponseWrapper(localName = "updateSendTaskResponse", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.UpdateSendTaskResponse")
    public void updateSendTask(
        @WebParam(name = "scheduleName", targetNamespace = "")
        String scheduleName,
        @WebParam(name = "oldName", targetNamespace = "")
        String oldName,
        @WebParam(name = "task", targetNamespace = "")
        Task task,
        @WebParam(name = "taskContext", targetNamespace = "")
        String taskContext);

    /**
     * 
     * @param scheduleName
     * @param timer
     * @param oldName
     */
    @WebMethod
    @RequestWrapper(localName = "updateTimer", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.UpdateTimer")
    @ResponseWrapper(localName = "updateTimerResponse", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.UpdateTimerResponse")
    public void updateTimer(
        @WebParam(name = "scheduleName", targetNamespace = "")
        String scheduleName,
        @WebParam(name = "oldName", targetNamespace = "")
        String oldName,
        @WebParam(name = "timer", targetNamespace = "")
        Timer timer);

    /**
     * 
     * @param scheduleName
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "startSendSchedule", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.StartSendSchedule")
    @ResponseWrapper(localName = "startSendScheduleResponse", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.StartSendScheduleResponse")
    public String startSendSchedule(
        @WebParam(name = "scheduleName", targetNamespace = "")
        String scheduleName);

    /**
     * 
     * @param scheduleName
     * @param condition
     * @param orderby
     * @param taskName
     */
    @WebMethod
    @RequestWrapper(localName = "manualStartTask", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.ManualStartTask")
    @ResponseWrapper(localName = "manualStartTaskResponse", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.ManualStartTaskResponse")
    public void manualStartTask(
        @WebParam(name = "scheduleName", targetNamespace = "")
        String scheduleName,
        @WebParam(name = "taskName", targetNamespace = "")
        String taskName,
        @WebParam(name = "condition", targetNamespace = "")
        String condition,
        @WebParam(name = "orderby", targetNamespace = "")
        String orderby);

    /**
     * 
     * @param qcuName
     * @param queueName
     */
    @WebMethod
    @RequestWrapper(localName = "startQueueListener", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.StartQueueListener")
    @ResponseWrapper(localName = "startQueueListenerResponse", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.StartQueueListenerResponse")
    public void startQueueListener(
        @WebParam(name = "qcuName", targetNamespace = "")
        String qcuName,
        @WebParam(name = "queueName", targetNamespace = "")
        String queueName);

    /**
     * 
     * @param qcuName
     * @param queueName
     */
    @WebMethod
    @RequestWrapper(localName = "stopQueueListener", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.StopQueueListener")
    @ResponseWrapper(localName = "stopQueueListenerResponse", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.StopQueueListenerResponse")
    public void stopQueueListener(
        @WebParam(name = "qcuName", targetNamespace = "")
        String qcuName,
        @WebParam(name = "queueName", targetNamespace = "")
        String queueName);

    /**
     * 
     */
    @WebMethod
    @RequestWrapper(localName = "startAllQueueListener", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.StartAllQueueListener")
    @ResponseWrapper(localName = "startAllQueueListenerResponse", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.StartAllQueueListenerResponse")
    public void startAllQueueListener();

    /**
     * 
     */
    @WebMethod
    @RequestWrapper(localName = "stopAllQueueListener", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.StopAllQueueListener")
    @ResponseWrapper(localName = "stopAllQueueListenerResponse", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.StopAllQueueListenerResponse")
    public void stopAllQueueListener();

    /**
     * 
     * @param scheduleName
     */
    @WebMethod
    @RequestWrapper(localName = "stopSendSchedule", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.StopSendSchedule")
    @ResponseWrapper(localName = "stopSendScheduleResponse", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.StopSendScheduleResponse")
    public void stopSendSchedule(
        @WebParam(name = "scheduleName", targetNamespace = "")
        String scheduleName);

    /**
     * 
     * @param scheduleName
     * @param taskName
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getSendTaskParameters", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.GetSendTaskParameters")
    @ResponseWrapper(localName = "getSendTaskParametersResponse", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.GetSendTaskParametersResponse")
    public String getSendTaskParameters(
        @WebParam(name = "scheduleName", targetNamespace = "")
        String scheduleName,
        @WebParam(name = "taskName", targetNamespace = "")
        String taskName);

    /**
     * 
     * @param scheduleName
     * @param taskName
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getRecvTaskParameters", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.GetRecvTaskParameters")
    @ResponseWrapper(localName = "getRecvTaskParametersResponse", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.GetRecvTaskParametersResponse")
    public String getRecvTaskParameters(
        @WebParam(name = "scheduleName", targetNamespace = "")
        String scheduleName,
        @WebParam(name = "taskName", targetNamespace = "")
        String taskName);

    /**
     * 
     * @param scheduleName
     * @param taskName
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getSendTaskParameterValues", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.GetSendTaskParameterValues")
    @ResponseWrapper(localName = "getSendTaskParameterValuesResponse", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.GetSendTaskParameterValuesResponse")
    public String getSendTaskParameterValues(
        @WebParam(name = "scheduleName", targetNamespace = "")
        String scheduleName,
        @WebParam(name = "taskName", targetNamespace = "")
        String taskName);

    /**
     * 
     * @param scheduleName
     * @param taskName
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getRecvTaskParameterValues", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.GetRecvTaskParameterValues")
    @ResponseWrapper(localName = "getRecvTaskParameterValuesResponse", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.GetRecvTaskParameterValuesResponse")
    public String getRecvTaskParameterValues(
        @WebParam(name = "scheduleName", targetNamespace = "")
        String scheduleName,
        @WebParam(name = "taskName", targetNamespace = "")
        String taskName);

    /**
     * 
     * @param values
     * @param scheduleName
     * @param taskName
     */
    @WebMethod
    @RequestWrapper(localName = "updateSendTaskParameterValues", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.UpdateSendTaskParameterValues")
    @ResponseWrapper(localName = "updateSendTaskParameterValuesResponse", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.UpdateSendTaskParameterValuesResponse")
    public void updateSendTaskParameterValues(
        @WebParam(name = "scheduleName", targetNamespace = "")
        String scheduleName,
        @WebParam(name = "taskName", targetNamespace = "")
        String taskName,
        @WebParam(name = "values", targetNamespace = "")
        String values);

    /**
     * 
     * @param values
     * @param scheduleName
     * @param taskName
     */
    @WebMethod
    @RequestWrapper(localName = "updateRecvTaskParameterValues", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.UpdateRecvTaskParameterValues")
    @ResponseWrapper(localName = "updateRecvTaskParameterValuesResponse", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.UpdateRecvTaskParameterValuesResponse")
    public void updateRecvTaskParameterValues(
        @WebParam(name = "scheduleName", targetNamespace = "")
        String scheduleName,
        @WebParam(name = "taskName", targetNamespace = "")
        String taskName,
        @WebParam(name = "values", targetNamespace = "")
        String values);

    /**
     * 
     * @param scheduleName
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAssociateWithSendTaskParam", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.GetAssociateWithSendTaskParam")
    @ResponseWrapper(localName = "getAssociateWithSendTaskParamResponse", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.GetAssociateWithSendTaskParamResponse")
    public String getAssociateWithSendTaskParam(
        @WebParam(name = "scheduleName", targetNamespace = "")
        String scheduleName);

    /**
     * 
     * @param scheduleName
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAssociateWithRecvTaskParam", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.GetAssociateWithRecvTaskParam")
    @ResponseWrapper(localName = "getAssociateWithRecvTaskParamResponse", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.GetAssociateWithRecvTaskParamResponse")
    public String getAssociateWithRecvTaskParam(
        @WebParam(name = "scheduleName", targetNamespace = "")
        String scheduleName);

    /**
     * 
     * @param scheduleName
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAssociateWithOutSendTaskParam", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.GetAssociateWithOutSendTaskParam")
    @ResponseWrapper(localName = "getAssociateWithOutSendTaskParamResponse", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.GetAssociateWithOutSendTaskParamResponse")
    public String getAssociateWithOutSendTaskParam(
        @WebParam(name = "scheduleName", targetNamespace = "")
        String scheduleName);

    /**
     * 
     * @param scheduleName
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAssociateWithOutRecvTaskParam", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.GetAssociateWithOutRecvTaskParam")
    @ResponseWrapper(localName = "getAssociateWithOutRecvTaskParamResponse", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.GetAssociateWithOutRecvTaskParamResponse")
    public String getAssociateWithOutRecvTaskParam(
        @WebParam(name = "scheduleName", targetNamespace = "")
        String scheduleName);

    /**
     * 
     * @param scheduleName
     * @param timer
     * @param taskName
     * @param oldTimerName
     */
    @WebMethod
    @RequestWrapper(localName = "updateTimerOnTask", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.UpdateTimerOnTask")
    @ResponseWrapper(localName = "updateTimerOnTaskResponse", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.UpdateTimerOnTaskResponse")
    public void updateTimerOnTask(
        @WebParam(name = "scheduleName", targetNamespace = "")
        String scheduleName,
        @WebParam(name = "taskName", targetNamespace = "")
        String taskName,
        @WebParam(name = "oldTimerName", targetNamespace = "")
        String oldTimerName,
        @WebParam(name = "timer", targetNamespace = "")
        Timer timer);

    /**
     * 
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getConnectionTypeStringList", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.GetConnectionTypeStringList")
    @ResponseWrapper(localName = "getConnectionTypeStringListResponse", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.GetConnectionTypeStringListResponse")
    public List<String> getConnectionTypeStringList();

    /**
     * 
     * @return
     *     returns java.util.List<cn.ls.integrator.client.service.ConnectionType>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getConnectionTypeList", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.GetConnectionTypeList")
    @ResponseWrapper(localName = "getConnectionTypeListResponse", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.GetConnectionTypeListResponse")
    public List<ConnectionType> getConnectionTypeList();

    /**
     * 
     * @param type
     * @return
     *     returns cn.ls.integrator.client.service.ConnectionType
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getConnectionType", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.GetConnectionType")
    @ResponseWrapper(localName = "getConnectionTypeResponse", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.GetConnectionTypeResponse")
    public ConnectionType getConnectionType(
        @WebParam(name = "type", targetNamespace = "")
        String type);

    /**
     * 
     * @param scheduleName
     * @return
     *     returns cn.ls.integrator.client.service.Connection
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getSendScheduleConnection", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.GetSendScheduleConnection")
    @ResponseWrapper(localName = "getSendScheduleConnectionResponse", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.GetSendScheduleConnectionResponse")
    public Connection getSendScheduleConnection(
        @WebParam(name = "scheduleName", targetNamespace = "")
        String scheduleName);

    /**
     * 
     * @param scheduleName
     * @return
     *     returns cn.ls.integrator.client.service.Connection
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getRecvScheduleConnection", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.GetRecvScheduleConnection")
    @ResponseWrapper(localName = "getRecvScheduleConnectionResponse", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.GetRecvScheduleConnectionResponse")
    public Connection getRecvScheduleConnection(
        @WebParam(name = "scheduleName", targetNamespace = "")
        String scheduleName);

    /**
     * 
     * @param connection
     * @param scheduleName
     */
    @WebMethod
    @RequestWrapper(localName = "updateSendScheduleConnection", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.UpdateSendScheduleConnection")
    @ResponseWrapper(localName = "updateSendScheduleConnectionResponse", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.UpdateSendScheduleConnectionResponse")
    public void updateSendScheduleConnection(
        @WebParam(name = "scheduleName", targetNamespace = "")
        String scheduleName,
        @WebParam(name = "connection", targetNamespace = "")
        Connection connection);

    /**
     * 
     * @param connection
     * @param scheduleName
     */
    @WebMethod
    @RequestWrapper(localName = "updateRecvScheduleConnection", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.UpdateRecvScheduleConnection")
    @ResponseWrapper(localName = "updateRecvScheduleConnectionResponse", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.UpdateRecvScheduleConnectionResponse")
    public void updateRecvScheduleConnection(
        @WebParam(name = "scheduleName", targetNamespace = "")
        String scheduleName,
        @WebParam(name = "connection", targetNamespace = "")
        Connection connection);

    /**
     * 
     * @param scheduleName
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getSendScheduleParameters", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.GetSendScheduleParameters")
    @ResponseWrapper(localName = "getSendScheduleParametersResponse", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.GetSendScheduleParametersResponse")
    public String getSendScheduleParameters(
        @WebParam(name = "scheduleName", targetNamespace = "")
        String scheduleName);

    /**
     * 
     * @param scheduleName
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getSendScheduleParameterValues", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.GetSendScheduleParameterValues")
    @ResponseWrapper(localName = "getSendScheduleParameterValuesResponse", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.GetSendScheduleParameterValuesResponse")
    public String getSendScheduleParameterValues(
        @WebParam(name = "scheduleName", targetNamespace = "")
        String scheduleName);

    /**
     * 
     * @param startTime
     * @param recvNodeName
     * @param scheduleName
     * @param endTime
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getFileExchangeNumByScheduleName", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.GetFileExchangeNumByScheduleName")
    @ResponseWrapper(localName = "getFileExchangeNumByScheduleNameResponse", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.GetFileExchangeNumByScheduleNameResponse")
    public String getFileExchangeNumByScheduleName(
        @WebParam(name = "scheduleName", targetNamespace = "")
        String scheduleName,
        @WebParam(name = "recvNodeName", targetNamespace = "")
        String recvNodeName,
        @WebParam(name = "startTime", targetNamespace = "")
        String startTime,
        @WebParam(name = "endTime", targetNamespace = "")
        String endTime);

    /**
     * 
     * @param startTime
     * @param recvNodeName
     * @param exchangeTaskName
     * @param endTime
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getFileExchangeNumByExchageTaskName", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.GetFileExchangeNumByExchageTaskName")
    @ResponseWrapper(localName = "getFileExchangeNumByExchageTaskNameResponse", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.GetFileExchangeNumByExchageTaskNameResponse")
    public String getFileExchangeNumByExchageTaskName(
        @WebParam(name = "exchangeTaskName", targetNamespace = "")
        String exchangeTaskName,
        @WebParam(name = "recvNodeName", targetNamespace = "")
        String recvNodeName,
        @WebParam(name = "startTime", targetNamespace = "")
        String startTime,
        @WebParam(name = "endTime", targetNamespace = "")
        String endTime);

    /**
     * 
     * @param startTime
     * @param recvNodeName
     * @param exchangeTaskName
     * @param endTime
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getMessageLogByTaskName", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.GetMessageLogByTaskName")
    @ResponseWrapper(localName = "getMessageLogByTaskNameResponse", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.GetMessageLogByTaskNameResponse")
    public String getMessageLogByTaskName(
        @WebParam(name = "exchangeTaskName", targetNamespace = "")
        String exchangeTaskName,
        @WebParam(name = "recvNodeName", targetNamespace = "")
        String recvNodeName,
        @WebParam(name = "startTime", targetNamespace = "")
        String startTime,
        @WebParam(name = "endTime", targetNamespace = "")
        String endTime);

    /**
     * 
     * @param startTime
     * @param recvNodeName
     * @param exchangeTaskName
     * @param endTime
     * @return
     *     returns java.lang.Long
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getSendMessageNum", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.GetSendMessageNum")
    @ResponseWrapper(localName = "getSendMessageNumResponse", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.GetSendMessageNumResponse")
    public Long getSendMessageNum(
        @WebParam(name = "exchangeTaskName", targetNamespace = "")
        String exchangeTaskName,
        @WebParam(name = "recvNodeName", targetNamespace = "")
        String recvNodeName,
        @WebParam(name = "startTime", targetNamespace = "")
        String startTime,
        @WebParam(name = "endTime", targetNamespace = "")
        String endTime);

    /**
     * 
     * @param startTime
     * @param recvNodeName
     * @param scheduleName
     * @param endTime
     * @return
     *     returns java.lang.Long
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getSendFileNumByExchangeTaskName", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.GetSendFileNumByExchangeTaskName")
    @ResponseWrapper(localName = "getSendFileNumByExchangeTaskNameResponse", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.GetSendFileNumByExchangeTaskNameResponse")
    public Long getSendFileNumByExchangeTaskName(
        @WebParam(name = "scheduleName", targetNamespace = "")
        String scheduleName,
        @WebParam(name = "recvNodeName", targetNamespace = "")
        String recvNodeName,
        @WebParam(name = "startTime", targetNamespace = "")
        String startTime,
        @WebParam(name = "endTime", targetNamespace = "")
        String endTime);

    /**
     * 
     * @param startTime
     * @param recvNodeName
     * @param scheduleName
     * @param endTime
     * @return
     *     returns java.lang.Long
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getSendFileNumByScheduleName", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.GetSendFileNumByScheduleName")
    @ResponseWrapper(localName = "getSendFileNumByScheduleNameResponse", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.GetSendFileNumByScheduleNameResponse")
    public Long getSendFileNumByScheduleName(
        @WebParam(name = "scheduleName", targetNamespace = "")
        String scheduleName,
        @WebParam(name = "recvNodeName", targetNamespace = "")
        String recvNodeName,
        @WebParam(name = "startTime", targetNamespace = "")
        String startTime,
        @WebParam(name = "endTime", targetNamespace = "")
        String endTime);

    /**
     * 
     * @param values
     * @param scheduleName
     */
    @WebMethod
    @RequestWrapper(localName = "updateSendScheduleParameterValues", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.UpdateSendScheduleParameterValues")
    @ResponseWrapper(localName = "updateSendScheduleParameterValuesResponse", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.UpdateSendScheduleParameterValuesResponse")
    public void updateSendScheduleParameterValues(
        @WebParam(name = "scheduleName", targetNamespace = "")
        String scheduleName,
        @WebParam(name = "values", targetNamespace = "")
        String values);

    /**
     * 
     * @param scheduleName
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getRecvScheduleParameters", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.GetRecvScheduleParameters")
    @ResponseWrapper(localName = "getRecvScheduleParametersResponse", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.GetRecvScheduleParametersResponse")
    public String getRecvScheduleParameters(
        @WebParam(name = "scheduleName", targetNamespace = "")
        String scheduleName);

    /**
     * 
     * @param scheduleName
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getRecvScheduleParameterValues", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.GetRecvScheduleParameterValues")
    @ResponseWrapper(localName = "getRecvScheduleParameterValuesResponse", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.GetRecvScheduleParameterValuesResponse")
    public String getRecvScheduleParameterValues(
        @WebParam(name = "scheduleName", targetNamespace = "")
        String scheduleName);

    /**
     * 
     * @param values
     * @param scheduleName
     */
    @WebMethod
    @RequestWrapper(localName = "updateRecvScheduleParameterValues", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.UpdateRecvScheduleParameterValues")
    @ResponseWrapper(localName = "updateRecvScheduleParameterValuesResponse", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.UpdateRecvScheduleParameterValuesResponse")
    public void updateRecvScheduleParameterValues(
        @WebParam(name = "scheduleName", targetNamespace = "")
        String scheduleName,
        @WebParam(name = "values", targetNamespace = "")
        String values);

    /**
     * 
     * @param scheduleName
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "testSendScheduleConnect", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.TestSendScheduleConnect")
    @ResponseWrapper(localName = "testSendScheduleConnectResponse", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.TestSendScheduleConnectResponse")
    public boolean testSendScheduleConnect(
        @WebParam(name = "scheduleName", targetNamespace = "")
        String scheduleName);

    /**
     * 
     * @param scheduleName
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "testRecvScheduleConnect", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.TestRecvScheduleConnect")
    @ResponseWrapper(localName = "testRecvScheduleConnectResponse", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.TestRecvScheduleConnectResponse")
    public boolean testRecvScheduleConnect(
        @WebParam(name = "scheduleName", targetNamespace = "")
        String scheduleName);

    /**
     * 
     * @param connection
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "testConnection", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.TestConnection")
    @ResponseWrapper(localName = "testConnectionResponse", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.TestConnectionResponse")
    public boolean testConnection(
        @WebParam(name = "connection", targetNamespace = "")
        Connection connection);

    /**
     * 
     * @param scheduleName
     * @param taskName
     * @return
     *     returns java.lang.Long
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getTimestamp", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.GetTimestamp")
    @ResponseWrapper(localName = "getTimestampResponse", targetNamespace = "http://service.server.integrator.ls.cn/", className = "cn.ls.integrator.client.service.GetTimestampResponse")
    public Long getTimestamp(
        @WebParam(name = "scheduleName", targetNamespace = "")
        String scheduleName,
        @WebParam(name = "taskName", targetNamespace = "")
        String taskName);

}
