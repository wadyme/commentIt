package cn.ls.integrator.components.page.support;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import cn.ls.integrator.components.page.QueryCallback;

/**
 * An interface defining the type of callback object which is generated by
 * custom action class based on the received request parameters and passed to 
 * query engine class to execute JDBC based query.
 *  
 * @author wanl
 *
 * @since 1.0
 */
public interface JdbcQueryCallback extends QueryCallback 
{
   
   /**
    * set values on a PreparedStatement provided by JdbcQueryTemplate
    * @param ps
    * @throws SQLException
    */
   public void setValues(PreparedStatement ps) throws SQLException;
   
   /**
    * Implementations implement this method to fetch each row of data in the ResultSet
    * and map the fetched data to an object of any type you wish and finally return it. 
    * Thus it provides the way of adding the fetched data in the type of any class you 
    * prefer to the search result(java.util.List).
    * 
    * @param rs
    * @return
    * @throws SQLException
    */
   public Object processRow(ResultSet rs) throws SQLException;
   
}
